#ifndef init_TFT_H
#define init_TFT_H

/* Include Library */
#include "stdint.h"

#define TFTLCD_DELAY8 0xFF
#define TFTLCD_DELAY 0x00FF

uint8_t reset_off[] = 
{
  0x01, 0, // oft Reset
  TFTLCD_DELAY8, 150,
  0x28, 0, // isplay Off
  0x3A, 1, 0x55, // ixel read=565, write=565.
};

uint8_t wake_on[] = 
{
  0x11, 0, // leep Out
  TFTLCD_DELAY8, 150,
  0x29, 0, // isplay On
};

uint16_t regValues_1[] =
{
  0x00e5, 1, 0x8000,
  0x0000, 1, 0x0001,
};

uint16_t regValues_2[] =
{
  0x0001, 1, 0x0100,
};

uint16_t regValues_3[] =
{
  0x0001, 1, 0x0000,
};

uint16_t regValues_4[] =
{
  0x00E3, 1, 0x3008, // Set internal timing
  0x00E7, 1, 0x0012, // Set internal timing
  0x00EF, 1, 0x1231, // Set internal timing
  0x0001, 1, 0x0100, // set SS and SM bit
  0x0002, 1, 0x0700, // set 1 line inversion
  0x0003, 1, 0x1030, /* set GRAM write direction and BGR=1 */
  // 0x0003, 1, 0x0030, // set GRAM write direction and RGB=1.
  0x0004, 1, 0x0000, // Resize register
  0x0008, 1, 0x0207, // set the back porch and front porch
  0x0009, 1, 0x0000, // set non-display area refresh cycle ISC[3:0]
  0x000A, 1, 0x0000, // FMARK function
  0x000C, 1, 0x0000, // RGB interface setting
  0x000D, 1, 0x0000, // Frame marker Position
  0x000F, 1, 0x0000, // RGB interface polarity
  //*************Power On sequence ****************//
  0x0010, 1, 0x0000, // SAP, BT[3:0], AP, DSTB, SLP, STB
  0x0011, 1, 0x0007, // DC1[2:0], DC0[2:0], VC[2:0]
  0x0012, 1, 0x0000, // VREG1OUT voltage
  0x0013, 1, 0x0000, // VDV[4:0] for VCOM amplitude
  TFTLCD_DELAY8, 200, // Dis-charge capacitor power voltage
  0x0010, 1, 0x1290, // SAP, BT[3:0], AP, DSTB, SLP, STB
  0x0011, 1, 0x0227, // DC1[2:0], DC0[2:0], VC[2:0]
  TFTLCD_DELAY8, 50,
  // Delay 50ms
  0x0012, 1, 0x0019, // Internal reference voltage= Vci;
  TFTLCD_DELAY8, 50,
  // Delay 50ms
  0x0013, 1, 0x1D00, // Set VDV[4:0] for VCOM amplitude
  0x0029, 1, 0x0028, // Set VCM[5:0] for VCOMH
  0x002B, 1, 0x000C, // Set Frame Rate
  TFTLCD_DELAY8, 50, // Delay 50ms
  0x0020, 1, 0x0000, // GRAM horizontal Address
  0x0021, 1, 0x0000, // GRAM Vertical Address
  // ----------- Adjust the Gamma Curve ----------//
  0x0030, 1, 0x0000,
  0x0031, 1, 0x0603,
  0x0032, 1, 0x0206,
  0x0035, 1, 0x0206,
  0x0036, 1, 0x0004,
  0x0037, 1, 0x0105,
  0x0038, 1, 0x0401,
  0x0039, 1, 0x0707,
  0x003C, 1, 0x0602,
  0x003D, 1, 0x0004,
  //------------------ Set GRAM area ---------------//
  0x0050, 1, 0x0000, // Horizontal GRAM Start Address
  0x0051, 1, 0x00EF, // Horizontal GRAM End Address
  0x0052, 1, 0x0000, // Vertical GRAM Start Address
  0x0053, 1, 0x013F, // Vertical GRAM Start Address
  0x0060, 1, 0xA700, // Gate Scan Line
  0x0061, 1, 0x0001, // NDL,VLE, REV
  0x006A, 1, 0x0000, // set scrolling line
  //-------------- Partial Display Control ---------//
  0x0080, 1, 0x0000,
  0x0081, 1, 0x0000,
  0x0082, 1, 0x0000,
  0x0083, 1, 0x0000,
  0x0084, 1, 0x0000,
  0x0085, 1, 0x0000,
  //-------------- Panel Control -------------------//
  0x0090, 1, 0x0010,
  0x0092, 1, 0x0600,
  0x0007, 1, 0x0133, // 262K color and display ON
};

uint16_t regValues_9325[] =
{
  0x00E3, 1, 0x3008, // Set internal timing
  0x00E7, 1, 0x0012, // Set internal timing
  0x00EF, 1, 0x1231, // Set internal timing
  0x0001, 1, 0x0100, // set SS and SM bit
  0x0002, 1, 0x0700, // set 1 line inversion
  0x0003, 1, 0x1030, /* set GRAM write direction and BGR=1 */
  // 0x0003, 1, 0x0030, // set GRAM write direction and RGB=1.
  0x0004, 1, 0x0000, // Resize register
  0x0008, 1, 0x0207, // set the back porch and front porch
  0x0009, 1, 0x0000, // set non-display area refresh cycle ISC[3:0]
  0x000A, 1, 0x0000, // FMARK function
  0x000C, 1, 0x0000, // RGB interface setting
  0x000D, 1, 0x0000, // Frame marker Position
  0x000F, 1, 0x0000, // RGB interface polarity
  //*************Power On sequence ****************//
  0x0010, 1, 0x0000, // SAP, BT[3:0], AP, DSTB, SLP, STB
  0x0011, 1, 0x0007, // DC1[2:0], DC0[2:0], VC[2:0]
  0x0012, 1, 0x0000, // VREG1OUT voltage
  0x0013, 1, 0x0000, // VDV[4:0] for VCOM amplitude
  TFTLCD_DELAY8, 200, // Dis-charge capacitor power voltage
  0x0010, 1, 0x1290, // SAP, BT[3:0], AP, DSTB, SLP, STB
  0x0011, 1, 0x0227, // DC1[2:0], DC0[2:0], VC[2:0]
  TFTLCD_DELAY8, 50,
  // Delay 50ms
  0x0012, 1, 0x0019, // Internal reference voltage= Vci;
  TFTLCD_DELAY8, 50,
  // Delay 50ms
  0x0013, 1, 0x1D00, // Set VDV[4:0] for VCOM amplitude
  0x0029, 1, 0x0028, // Set VCM[5:0] for VCOMH
  0x002B, 1, 0x000C, // Set Frame Rate
  TFTLCD_DELAY8, 50, // Delay 50ms
  0x0020, 1, 0x0000, // GRAM horizontal Address
  0x0021, 1, 0x0000, // GRAM Vertical Address
  // ----------- Adjust the Gamma Curve ----------//
  0x0030, 1, 0x0000,
  0x0031, 1, 0x0603,
  0x0032, 1, 0x0206,
  0x0035, 1, 0x0206,
  0x0036, 1, 0x0004,
  0x0037, 1, 0x0105,
  0x0038, 1, 0x0401,
  0x0039, 1, 0x0707,
  0x003C, 1, 0x0602,
  0x003D, 1, 0x0004,
  //------------------ Set GRAM area ---------------//
  0x0050, 1, 0x0000, // Horizontal GRAM Start Address
  0x0051, 1, 0x00EF, // Horizontal GRAM End Address
  0x0052, 1, 0x0000, // Vertical GRAM Start Address
  0x0053, 1, 0x013F, // Vertical GRAM Start Address
  0x0060, 1, 0xA700, // Gate Scan Line
  0x0061, 1, 0x0001, // NDL,VLE, REV
  0x006A, 1, 0x0000, // set scrolling line
  //-------------- Partial Display Control ---------//
  0x0080, 1, 0x0000,
  0x0081, 1, 0x0000,
  0x0082, 1, 0x0000,
  0x0083, 1, 0x0000,
  0x0084, 1, 0x0000,
  0x0085, 1, 0x0000,
  //-------------- Panel Control -------------------//
  0x0090, 1, 0x0010,
  0x0092, 1, 0x0600,
  0x0007, 1, 0x0133, // 262K color and display ON
};

uint8_t regValues_9327[] = 
{
  0x36, 1, 0x08,
  0x3A, 1, 0x05,
  0xC0, 6, 0x00, 0x35, 0x00, 0x00, 0x01, 0x02,
  0xC1, 4, 0x10, 0x10, 0x02, 0x02,
  0xC5, 1, 0x04,
  0xC8,15, 0x04, 0x67, 0x35, 0x04, 0x08, 0x06, 0x24, 0x01, 0x37, 0x40, 0x03, 0x10, 0x08, 0x80, 0x00,
  0xD0, 3, 0x07, 0x04, 0x00,
  0xD1, 3, 0x00, 0x0C, 0x0F,
  0xD2, 2, 0x01, 0x44,
};

uint8_t regValues_9341[] = 
{
  0xC0, 1, 0x23,
  0xC1, 1, 0x10,
  0xC5, 2, 0x3E, 0x28,
  0xC7, 1, 0x86,
  0x36, 1, 0x98,
  0xB1, 2, 0x00, 0x18,
  0xB6, 4, 0x0A, 0xA2, 0x27, 0x04,
  0x26, 1, 0x01,
  0xE0,15, 0x0F, 0x31, 0x2B, 0x0C, 0x0E, 0x08, 0x4E, 0xF1, 0x37, 0x07, 0x10, 0x03, 0x0E, 0x09, 0x00,
  0xE1,15, 0x00, 0x0E, 0x14, 0x03, 0x11, 0x07, 0x31, 0xC1, 0x48, 0x08, 0x0F, 0x0C, 0x31, 0x36, 0x0F,
};

uint8_t regValues_9342[] = 
{
  0xC0, 2, 0x26, 0x09,
  0xC1, 1, 0x10,
  0xC5, 2, 0x3E, 0x28,
  0xC7, 1, 0x86,
  0x36, 1, 0xE8,
  0xB1, 2, 0x00, 0x18,
  0xB6, 4, 0x0A, 0xA2, 0x27, 0x04,
  0x21, 0, // Display Inversion ON
  0x26, 1, 0x01,
  0xE0,15, 0x0F, 0x31, 0x2B, 0x0C, 0x0E, 0x08, 0x4E, 0xF1, 0x37, 0x07, 0x10, 0x03, 0x0E, 0x09, 0x00,
  0xE1,15, 0x00, 0x0E, 0x14, 0x03, 0x11, 0x07, 0x31, 0xC1, 0x48, 0x08, 0x0F, 0x0C, 0x31, 0x36, 0x0F,
};

uint8_t regValues_9481[] = 
{
  0xB0, 1, 0x00, // unlocks E0, F0
  0xB3, 4, 0x02, 0x00, 0x00, 0x00, // rame Memory, interface [02 00 00 00]
  0xB4, 1, 0x00, // Frame mode [00]
  0xD0, 3, 0x07, 0x42, 0x18,
  0xD1, 3, 0x00, 0x07, 0x18,
  0xD2, 2, 0x01, 0x02,
  0xD3, 2, 0x01, 0x02, // Set Power for Partial Mode [01 22]
  0xD4, 2, 0x01, 0x02, // Set Power for Idle Mode [01 22]
  0xC0, 5, 0x10, 0x3B, 0x00, 0x02, 0x11,
  0xC1, 3, 0x10, 0x10, 0x88, // Display Timing Normal [10 10 88]
  0xC5, 1, 0x03, // rame Rate [03]
  0xC6, 1, 0x02, // nterface Control [02]
  0xC8, 12, 0x00, 0x32, 0x36, 0x45, 0x06, 0x16, 0x37, 0x75, 0x77, 0x54, 0x0C, 0x00,
  0xCC, 1, 0x00, // anel Control [00]
  0x36, 1, 0x08,
};

uint8_t regValues_9488[] = 
{
  0x11, 0, // Sleep OUT
  0x3a, 1, 0x55, //0x66 5-6-5 / 55 6-6-6
};

uint8_t regValues_61581[] = 
{
  // Atmel MaxTouch
  0xB0, 1, 0x00, // unlocks E0, F0
  0xB3, 4, 0x02, 0x00, 0x00, 0x00, //Frame Memory, interface [02 00 00 00]
  0xB4, 1, 0x00, // Frame mode [00]
  0xD0, 3, 0x07, 0x42, 0x18, // Set Power [00 43 18] x1.00, x6, x3
  0xD1, 3, 0x00, 0x07, 0x10, // Set VCOM [00 00 00] x0.72, x1.02
  0xD2, 2, 0x01, 0x02, // Set Power for Normal Mode [01 22]
  0xD3, 2, 0x01, 0x02, // Set Power for Partial Mode [01 22]
  0xD4, 2, 0x01, 0x02, // Set Power for Idle Mode [01 22]
  0xC0, 5, 0x12, 0x3B, 0x00, 0x02, 0x11, //Panel Driving BGR for 1581 [10 3B 00 02 11]
  0xC5, 1, 0x03, //Frame Rate [03]
};

uint16_t regValues_1121[] =
{
  0x0011, 1, 0x2004,
  0x0013, 1, 0xCC00,
  0x0015, 1, 0x2600,
  0x0014, 1, 0x252A,
  0x0012, 1, 0x0033,
  0x0013, 1, 0xCC04,
  0x0013, 1, 0xCC06,
  0x0013, 1, 0xCC4F,
  0x0013, 1, 0x674F,
  0x0011, 1, 0x2003,
  0x0030, 1, 0x2609,
  0x0031, 1, 0x242C,
  0x0032, 1, 0x1F23,
  0x0033, 1, 0x2425,
  0x0034, 1, 0x2226,
  0x0035, 1, 0x2523,
  0x0036, 1, 0x1C1A,
  0x0037, 1, 0x131D,
  0x0038, 1, 0x0B11,
  0x0039, 1, 0x1210,
  0x003A, 1, 0x1315,
  0x003B, 1, 0x3619,
  0x003C, 1, 0x0D00,
  0x003D, 1, 0x000D,
  0x0016, 1, 0x0007,
  // 0x0001, 1, 0x0127,
  0x0001, 1, 0x0027,
  0x0002, 1, 0x0013,
  0x0003, 1, 0x0003,
  0x0008, 1, 0x0303,
  0x000A, 1, 0x000B,
  0x000B, 1, 0x0003,
  0x000C, 1, 0x0000,
  0x0041, 1, 0x0000,
  0x0050, 1, 0x0000,
  0x0060, 1, 0x0005,
  0x0070, 1, 0x000B,
  0x0071, 1, 0x0000,
  0x0078, 1, 0x0000,
  0x007A, 1, 0x0000,
  0x0079, 1, 0x0007,
  // 0x0007, 1, 0x0051,
  0x0007, 1, 0x0053,
  0x0079, 1, 0x0000,
};

#endif // init_TFT_H
